// It uses only for module specific Prisma's client generation
// For migrations and referencing see full schema in the repo's project

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas = ["ticket"]
}

generator client {
  provider        = "prisma-client-js"
  output          =  "../src/lib/prisma/generated"
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x"]
  previewFeatures = ["tracing", "metrics", "clientExtensions", "multiSchema"]
}

model Spot {
  id            String   @id @db.Uuid @default(uuid())
  title         String   @unique
  address       String?
  createdAt     DateTime @default(now())
  tickets       Ticket[]

  @@schema("ticket")
}

model Ticket {
  id            String   @id @db.Uuid @default(uuid())

  userId        String?  @db.VarChar(255)

  spot          Spot     @relation(fields: [spotId], references: [id])
  spotId        String   @db.VarChar(255)

  status        TicketStatus    @default(OPEN)

  updatedAt     DateTime @default(now())
  createdAt     DateTime @default(now())

  @@index([userId])
  @@index([spotId])
  @@index([status])
  @@schema("ticket")
}

enum TicketStatus {
  OPEN
  IN_PROGRESS
  SUCCESS
  REJECT
  // FORWARD - TODO
  WAIT_TIMEOUT

  @@schema("ticket")
}
