// It used primarily for references and migrations
// For Prisma client generations - see in related modules

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  schemas = ["ticket", "iam"]
}

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x"]
  previewFeatures = ["tracing", "metrics", "clientExtensions", "multiSchema"]
}

model User {
  id            String   @id @db.Uuid @default(uuid())
  createdAt     DateTime @default(now())
  username      String?  @unique
  password      String?
  email         String   @unique
  roles         String[]
  rules         Json[]
  googleId      String?  @unique
  googleProfile Json?
  tickets       Ticket[]

  @@schema("iam")
}

model Spot {
  id            String   @id @db.Uuid @default(uuid())
  title         String   @unique
  address       String?
  createdAt     DateTime @default(now())
  tickets       Ticket[]

  @@schema("ticket")
}

model Ticket {
  id            String   @id @db.Uuid @default(uuid())

  user          User?    @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  userId        String?  @db.Uuid

  spot          Spot     @relation(fields: [spotId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  spotId        String   @db.Uuid

  createdAt     DateTime @default(now())

  @@index([userId])
  @@index([spotId])
  @@schema("ticket")
}
